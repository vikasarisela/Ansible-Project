- name: Creating Ec2 Instance and Route53
  hosts: local
  connection: local
  vars:
    AMI_ID: ami-09c813fb71547fc4f
    Instnace_ID: i-017c9856718c1df33
    Security_Group: sg-07e88823124a6dddf
    Domain_Name: "cloudskills.fun"
    instances: 
    # we can pass instance through command line using -e
    #-e "instances = ['catalogue','user','cart']"
    # - mongodb
    # - redis
    # - mysql
    # - rabbitmq
  tasks: 
  - name: create ec2 Instance
    amazon.aws.ec2_instance:
       name: "{{ item }}"    #mongodb
       instance_type: t2.micro
       image_id: "{{ AMI_ID }}"
       security_group: "{{ Security_Group }}"
       tags:
         Name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  - # - name: print the ec2_output
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"

  # - name: print public_ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: print private_ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ Domain_Name }}"
      record: "{{ item.item }}.{{ Domain_Name }}" # mongodb.daws86s.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"

  # we are creating one record with public only for frontend
  - name: create route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{  Domain_Name }}"
      record: "{{ Domain_Name }}" # daws86s.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"


#pip3.9 install botocore boto3
# ansible wrote in pyhton , if ansible wants to contact aws , aws is expecting python libraries

#ansible-playbook -i inventory.ini ec2-r53.yaml -e "instances=['frontend']"